@using MagicMatchTracker.Features.Matches.Models
@using MagicMatchTracker.Features.Matches.Services
@inject MatchDeckSearchProvider Provider

<SearchMenu
	TItem="Deck"
	Provider="Provider"
	Placeholder="@(Participation.Deck?.Name ?? "Select a deck")"
	NotFoundMessage="No decks found"
	OnClose="@OnClose"
	OnSelect="@OnDeckSelect">
	<ResultItemTemplate>
		<div class="d-flex flex-column">
			<span>@(context.Name ?? context.Commander)</span>
			@if (context.Name is not null)
			{
				<span class="small">@context.Commander</span>
			}
			@if (context.Partner is not null)
			{
				<span class="small">@context.Partner</span>
			}
			@if (context.Owner != Participation.Player)
			{
				<span class="small d-flex align-items-center gap-1">
					Borrow from <Avatar Player="@context.Owner" Size="16"/> @context.Owner.Name
				</span>
			}
		</div>
	</ResultItemTemplate>
</SearchMenu>

@code {

	[Parameter, EditorRequired]
	public required MatchParticipationEditModel Participation { get; set; }

	[Parameter]
	public EventCallback OnClose { get; set; }

	[Parameter]
	public EventCallback<Deck> OnDeckSelect { get; set; }

	protected override void OnParametersSet()
	{
		Provider.MatchParticipation = Participation;
	}

}