// <auto-generated />
using System;
using MagicMatchTracker.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MagicMatchTracker.Data.Migrations
{
    [DbContext(typeof(Database))]
    [Migration("20250719090810_AddDecks")]
    partial class AddDecks
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MagicMatchTracker.Data.Models.Deck", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("ColourIdentity")
                        .IsRequired()
                        .HasColumnType("character varying(5)")
                        .HasColumnName("colour_identity");

                    b.Property<string>("Commander")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("commander");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("DeckUri")
                        .HasColumnType("text")
                        .HasColumnName("deck_uri");

                    b.Property<string>("ImageUri")
                        .HasColumnType("text")
                        .HasColumnName("image_uri");

                    b.Property<bool>("IsArchived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_archived");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uuid")
                        .HasColumnName("owner_id");

                    b.Property<string>("Partner")
                        .HasColumnType("text")
                        .HasColumnName("partner");

                    b.HasKey("Id")
                        .HasName("pk_decks");

                    b.HasIndex("OwnerId")
                        .HasDatabaseName("ix_decks_owner_id");

                    b.ToTable("decks", (string)null);
                });

            modelBuilder.Entity("MagicMatchTracker.Data.Models.Player", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("AvatarUri")
                        .HasColumnType("text")
                        .HasColumnName("avatar_uri");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_players");

                    b.ToTable("players", (string)null);
                });

            modelBuilder.Entity("MagicMatchTracker.Data.Models.Deck", b =>
                {
                    b.HasOne("MagicMatchTracker.Data.Models.Player", "Owner")
                        .WithMany("Decks")
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_decks_players_owner_id");

                    b.Navigation("Owner");
                });

            modelBuilder.Entity("MagicMatchTracker.Data.Models.Player", b =>
                {
                    b.Navigation("Decks");
                });
#pragma warning restore 612, 618
        }
    }
}
